class Solution {
public:
    int dx[4] = {0,0,1,-1};
    int dy[4] = {1,-1,0,0};
    bool isSafe(int x,int y,int rows,int cols){
        if(x<0 || x>= rows || y<0 || y>= cols) return false;
        return true;
    }
    bool solve(vector<vector<char>> &board,int x,int y ,string &word,int n, int rows,int cols){
        if(n<0) return false;
        if(n==0) return true;
        char tmp = board[x][y];
        board[x][y] = '#';
        for(int i=0;i<4;i++){
            int xn = x+dx[i];
            int yn = y+dy[i];
            if(isSafe(xn,yn,rows,cols) and board[xn][yn] == word[n-1]){
                if(solve(board,xn,yn,word,n-1,rows,cols)) return true;
            }
        }
        board[x][y] = tmp;
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int rows= board.size();
        int cols = board[0].size();
        int n = word.size()-1;
        for(int i=0;i<rows;i++){
            for(int j=0;j<cols;j++){
                if(board[i][j]==word[n]){
                    if(solve(board,i,j,word,n,rows,cols)) return true;
                }
            }
        }
        return false;
    }
};
