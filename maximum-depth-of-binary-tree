/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(!root) return 0;
        int depth = 1;

        queue<pair<TreeNode*,int>> q;
        q.push({root,depth});
        while(!q.empty()){
            auto front = q.front();
            q.pop();
            TreeNode* curr = front.first;
            int d = front.second;
            depth = max(depth,d);
            if(curr->left) q.push({curr->left,d+1});
            if(curr->right) q.push({curr->right,d+1});
        }
        return depth;
    }
};
