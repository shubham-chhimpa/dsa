class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> indegree(numCourses,0);
        vector<vector<int>> adj(numCourses,vector<int>());
        vector<int> ans;
        for(auto p:prerequisites){
            int u = p[0];
            int v = p[1];
            indegree[u]++;
            adj[v].push_back(u);
        }
        queue<int> q;
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0) q.push(i);
        }

        while(!q.empty()){
            auto curr = q.front();
            q.pop();
            if(indegree[curr]==0)ans.push_back(curr);
            for(auto neigh: adj[curr]){
                indegree[neigh]--;
                if(indegree[neigh]==0){
                    q.push(neigh);
                }
            }
        }
        if(ans.size() != numCourses) return {};
        return ans;
    }
};
