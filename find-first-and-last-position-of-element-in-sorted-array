class Solution {
public:
    int binarySearch(vector<int>& nums,int target,bool isSearchingLeft){
        int index = -1;
        int low = 0;
        int high = nums.size()-1;
        while(low<=high){
            int mid = low + (high-low)/2;
            if(nums[mid]==target){
                index=mid;
                if(isSearchingLeft){
                    high=mid-1; 
                }else{
                    low = mid+1;
                }
            }else if(nums[mid] <target){
                low = mid+1;
            }else{
                high = mid-1;
            }
        }
        return index;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        int left = -1;
        int right = -1;
        left = binarySearch(nums,target,true);
        right = binarySearch(nums,target,false);
        return {left,right};
    }
};
