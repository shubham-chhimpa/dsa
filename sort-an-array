class Solution {
public:
    void merge(vector<int> &nums,int low,int mid,int high){
        int i =low;
        int j = mid+1;
        vector<int> tmp;
        while(i<=mid || j<=high){
            if(i<=mid and j<=high) tmp.push_back(nums[i]<=nums[j] ? nums[i++] : nums[j++]);
            else if(i<=mid) tmp.push_back(nums[i++]);
            else if (j<=high) tmp.push_back(nums[j++]);
        }
        for(int k=0;k<tmp.size();k++){
            nums[low+k]= tmp[k];
        }
    }
    void mergeSort(vector<int> &nums,int low,int high){
        if(low>=high)return;
        int mid = low + (high -low)/2;
        mergeSort(nums,low,mid);
        mergeSort(nums,mid+1,high);
        merge(nums,low,mid,high);
    }
    vector<int> sortArray(vector<int>& nums) {
        mergeSort(nums,0,nums.size()-1);
        return nums;
    }
};
