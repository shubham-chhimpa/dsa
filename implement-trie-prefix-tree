
class TrieNode{
    public:
        bool isEnd=false;
        TrieNode* children[26];
};
class Trie {
public:
    TrieNode* root;
    Trie() {
      root = new TrieNode();
    }
    
    void insert(string word) {
        TrieNode* curr = root;
        for(char &c: word){
            int index = c-'a';
            if(curr->children[index]==NULL) curr->children[index] = new TrieNode();
            curr = curr->children[index];
        }
        curr->isEnd=true;
    }
    
    bool search(string word) {
        TrieNode* curr = root;
        for(char &c:word){
            int index = c-'a';
            if(!curr->children[index]) return false;
            curr = curr->children[index];
        }
        return curr->isEnd;
    }
    
    bool startsWith(string prefix) {
        TrieNode* curr = root;
        for(char &c:prefix){
            int index = c-'a';
            if(!curr->children[index]) return false;
            curr = curr->children[index];
        }
        return true;
    }
};

/**
 * Your Trie object will be instantiated and called as such:
 * Trie* obj = new Trie();
 * obj->insert(word);
 * bool param_2 = obj->search(word);
 * bool param_3 = obj->startsWith(prefix);
 */
