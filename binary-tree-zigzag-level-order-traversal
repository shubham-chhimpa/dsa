/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if (!root) return ans;
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        bool flip = false;
        while(!q.empty()){
            vector<int> currlevel;
            int size = q.size();
            while(size--){
                auto front = q.front();
                q.pop();
                TreeNode* curr = front.first;
                int level = front.second;
                currlevel.push_back(curr->val);
                if(curr->left) q.push({curr->left,level+1});
                if(curr->right)q.push({curr->right,level+1});
            }
            if(flip)reverse(currlevel.begin(),currlevel.end());
            flip = !flip;
            ans.push_back(currlevel);
        }
        return ans;
    }
};
