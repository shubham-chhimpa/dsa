/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(vector<int>& preorder, vector<int>& inorder,int low,int high,int &preIdx){
        if(low>high) return NULL;
        TreeNode* root = new TreeNode(preorder[preIdx++]);
        int mid = 0;
        for(int i=low;i<=high;i++){
            if(inorder[i]==root->val){
                mid=i;
                break;
            }
        }
        root->left = solve(preorder,inorder,low,mid-1,preIdx);
        root->right = solve(preorder,inorder,mid+1,high,preIdx);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int preIdx=0;
        return solve(preorder,inorder,0,inorder.size()-1,preIdx);
    }
};
