/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
    vector<vector<int> > ans;
    if(root==NULL) return ans;
    queue<pair<TreeNode*,int> > q;
    q.push(make_pair(root,0));

    while(!q.empty()){
        pair<TreeNode*,int>  top = q.front();
        int val = top.first->val;
        int level = top.second;
        q.pop();
        if(ans.size()==level){
            ans.push_back(vector<int>());
        }
        ans[level].push_back(val);
        if(top.first->left){
            q.push(make_pair(top.first->left,level+1));
        }
        if(top.first->right){
            q.push(make_pair(top.first->right,level+1));
        }
    }
    return ans;
    }
};
