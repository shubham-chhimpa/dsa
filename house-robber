class Solution {
public:
    int solve(vector<int>& nums,int n,vector<int> &memo){
        if(n<0) return 0;
        if(memo[n] != -1) return memo[n];
        return memo[n]=max(solve(nums,n-1,memo),nums[n]+solve(nums,n-2,memo));
    }
    int rob(vector<int>& nums) {
        int n = nums.size();
        vector<int> memo(n,-1);
        solve(nums,n-1,memo);
        return memo[n-1];
    }
};


class Solution {
public:
    int rob(vector<int>& nums) {
        int n =nums.size();
        if(n==0) return 0;
        if(n==1) return nums[0];
        vector<int> dp(n,0);
        dp[0] = nums[0];
        dp[1] = max(nums[0],nums[1]); 
        for(int i=2;i<n;i++){
            dp[i] = max(dp[i-1],nums[i]+dp[i-2]);
        }   

        return dp[n-1];
    }
};
