/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* node;
        node = new ListNode(0);
        ListNode* dummy = node;
        int extra = 0;
        while(l1 and l2){

            int a = l1->val;
            int b = l2->val;

            int sum = a+b;
            if(extra){
                sum += extra;
                extra=0;
            }
            if(sum>=10){
                extra=1;
                sum = sum %10;
            }
            node->next = new ListNode(sum);
            node=node->next;
            l1= l1->next;
            l2 = l2->next;
        }

        while(l1) {
            
            int sum = l1->val;
            if(extra){
                sum += extra;
                extra=0;
            }
            if(sum>=10){
                extra=1;
                sum = sum %10;
            }
           node->next = new ListNode(sum);
           node =node->next;
           l1=l1->next;
        }
        while(l2) {
            
            int sum = l2->val;
            if(extra){
                sum += extra;
                extra=0;
            }
            if(sum>=10){
                extra=1;
                sum = sum %10;
            }
           node->next = new ListNode(sum);
           node =node->next;
           l2=l2->next;
        }

        if(extra){
            node->next = new ListNode(1);
        }

        return dummy->next;;
    }
};
