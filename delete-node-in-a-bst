/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(TreeNode* root,int key){
        if(!root) return NULL;
        if(root->val>key) root->left = solve(root->left,key);
        else if(root->val<key) root->right = solve(root->right,key);
        else{
            if(!root->left) return root->right;
            if(!root->right) return root->left;
            TreeNode* curr = root->left;
            while(curr->right) curr =curr->right;
            root->val =curr->val;
            root->left = solve(root->left,curr->val);
        }
        return root;
    }
    TreeNode* deleteNode(TreeNode* root, int key) {
        return solve(root,key);
    }
};
