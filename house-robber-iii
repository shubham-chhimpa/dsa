/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<int,int> solve(TreeNode* root){
        if(!root) return {0,0};
        auto [leftwithroot,leftwithoutroot] = solve(root->left);
        auto [rightwithroot,rightwithoutroot] = solve(root->right);

        int withroot = root->val  + leftwithoutroot + rightwithoutroot;
        int withoutroot = max(leftwithroot,leftwithoutroot) + max(rightwithroot,rightwithoutroot);
        return {withroot,withoutroot};
    }
    int rob(TreeNode* root) {
        auto [with,without] = solve(root);
        return max(with,without);
    }
};
